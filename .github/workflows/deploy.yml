name: Deploy

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  goreleaser:
    name: GoReleaser
    runs-on: ubuntu-latest
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install Go
      uses: actions/setup-go@v3
      with:
        go-version-file: go.mod

    - name: Cache go module cache
      id: cache-go-mod
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Quay
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}
        registry: quay.io

    - name: Import GPG key
      if: github.event_name != 'pull_request'
      id: import_gpg
      uses: crazy-max/ghaction-import-gpg@v5
      with:
        gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.GPG_PASSPHRASE }}

    - name: Create release
      run: |
        if [[ "$GITHUB_REF" == refs/tags/* ]]; then
          export GORELEASER_ARGS="--rm-dist"
        fi
        make release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
